[{"title":"彩云小译：最佳的网页翻译插件","url":"https://java4u.cn/course/cai_yun_xiao_yi/","content":"前言当你浏览一些国外网站的时候，看到英文会不会头大？\n英文不好的你可能就直接关闭页面了，当然也有朋友硬着头皮去翻译，不过大多数人的操作就是，复制一段内容，粘贴到翻译网站搞明白原文意思，然后再复制粘贴，如此循环往复，直到读懂页面内容。\n但这样操作一是 比较麻烦 ，二是 影响阅读体验 。\n那么有没有一个工具，能帮助我们加载网站页面的时候就能看到翻译后的内容，最好原内容也不要替换掉，这样遇到不通顺的地方也可以人肉校准。\n\n我今天看资料的时候，就发现了这么一款工具，非常简单好用，接下来就介绍下它。\n工具介绍这个神器是一个谷歌浏览器扩展插件，名字叫 彩云小译 。它能够通过双语对照的方式进行网页翻译，可以一键高效的让你获得母语级阅读体验。\n以下是这个插件截图和相关设置。\n\n可以看到，它像很多同类插件一样支持划词翻译，同时提供语音朗读。\n\n不过它的杀手锏是网页翻译。会识别英语和日语，手动或自动翻译成中文。喜欢自动翻译的话，设置里打个勾就行。翻译字幕默认显示也提供「双语对照」、「只显示原文」和「只显示译文」三种设置。你可以按需配置，我比较喜欢双语对照模式，如下图。\n\n工具使用有条件科学上网的朋友，可以直接在 chrome 网上应用商店搜索 彩云小译 ，添加至 chrome 即可使用。\n另外一部分朋友就需要下载插件源文件，打开谷歌浏览器的开发者模式，将源文件拖入该地址下：chrome://extensions/  ，安装即可使用。\n需要插件源文件的朋友，可以后台回复 chrome_plugin_cyxy 获取下载链接。\n这里也有官方发布的安装和使用的短视频。\n这款工具简单又好用吧，如果对你有用的话，可以给我点个赞，分享给身边朋友，非常感谢读者朋友，也欢迎关注我，我会分享更多优质原创内容。\n\n\n","categories":["教程"],"tags":["实用工具","教程","翻译","chrome 插件"]},{"title":"最佳的思维导图生成工具： markmap 使用教程","url":"https://java4u.cn/course/markmap/","content":"前言相信很多程序员朋友都有在用 Markdown 吧，我是大三找实习工作的时候接触到的，简历就是用 Markdown 写的。\nMarkdown 的好处是专注码字的同时还能兼顾排版，不用像 word 那样文本加个粗都需要移动下鼠标，体验非常好。\n它的缺点就是可视化能力很弱，这就降低了信息的传播效率，毕竟人对于图像化内容的接收程度要强于文本。\n可视化表达方面，思维导图就很不错。它作为一种图象化工具，通过层级式发散式地组织主题，帮助我们更好的记忆、学习和思考。\n但在过去，这两类工具是各自独立的，也就是你写完 Markdown 文本，想要可视化地传达一些重点给读者，就需要重新录入下思维导图，因此比较繁琐，这也是我不怎么用思维导图的原因。\n不过最近我发现一款很好用的工具，可以很好的解决上边的问题，在此分享给大家。以下是本文的重点内容对应的思维导图，就是用这款工具生成的。\n\n工具介绍这款工具叫 markmap。\nmarkmap 可以将 Markdown 语法的文本通过思维导图的方式进行可视化。以下是官网截图，markmap 这个名字来自 markdown 的前半部分 和 mindmap 的后半部分，slogan 是 Visualize your Markdown with mindmaps 。\n\n工具使用在线版如果你不想安装任何东西，那可以直接浏览器（建议 chrome 浏览器）上访问 https://markmap.js.org/repl 即可仿照官网模板进行转换，如下图。左边录入 Markdown 文本，右边会实时展示出思维导图。\n\nMarkdown 语法中的链接，加粗，删除线，斜体，单行代码，代码块，数学公式，转换成思维导图都有相应的视图效果。而且支持下载生成动态化的 html 文件以及 svg 文件。\n动态化效果如下图，可以折叠和打开。\n\n离线版如果你想拥有更好的使用体验，并且希望在断网的情况下也能够使用，那我推荐你下面这种方案。\n在 Visual Studio Code 上安装 markmap 插件，如下图。\n\n编辑 Markdown 文本，文件名以 .mm.md 结尾即可使用，并且可以点击右下角「export」按钮导出动态的 html 文件。\n\n这款工具简单又好用吧，如果对你有用的话，可以给我点个赞，分享给身边朋友，非常感谢读者朋友，也欢迎关注我，我会分享更多优质原创内容。\n\n\n","categories":["教程"],"tags":["实用工具","教程","思维导图","Markdown"]},{"title":"建站神器：Hexo+Kaze+Gitee Pages 搭建静态博客网站","url":"https://java4u.cn/course/hexo_site_course/","content":"前言建网站本身是一个很大的工程，涉及前端页面的搭建，网站数据的存储，还要购置服务器资源，甚至是后期的维护，过程相当繁琐。\n不过如果仅仅是想搭建个人的网站，写写博客，想要美观，又不想操心太多和写博客无关的事情。那么，Hexo + Kaze + Gitee Pages 的方式就很适合你。\n本文就讲下如何借助这三样免费的技术或服务，来搭建一个可访问的静态博客网站。\n\nHexo 简介Hexo 是什么？Hexo 是一个快速，简单且功能强大的博客框架。如果你用 Markdown 写博客，Hexo 可以在几秒内生成带有精美主题的静态文件。\nHexo 安装前置要求\nNode.js（版本 10.13 以上，建议使用 12.0 以上版本）\nGit\n\n安装 Git\nWindows：下载并安装 git。\nMac：使用 Homebrew 安装。\nLinux（Ubuntu，Debian）： sudo apt-get install git-core \nLinux（Fedora，Red Hat，CentOS）： sudo yum install git-core \n\n安装 Node.jsNode.js 为大多数平台提供了 官方安装程序。\n替代安装方法：\n\nWindows：使用 nvs 安装它。\nMac：使用 Homebrew 安装。\nLinux（基于DEB / RPM）：与 NodeSource 一起安装。\n其他：通过相应的软件包管理器进行安装。请参阅 Node.js 提供的指南。\n\n安装 Hexo用 npm 安装 Hexo。\nnpm install -g hexo-cli\n\n\n\n使用以下指令查看是否安装成功。\nhexo version\n\n\n\n如果你想卸载 Hexo，使用以下指令：\nnpm uninstall -g hexo-cli \n\n\n\n运行 hexo安装后，你可以通过 hexo &lt;command&gt; 运行 Hexo。比如通过 hexo help 指令来获取使用帮助。\nhexo help\n\n\n帮助里提到 hexo init 命令可以创建一个新的 Hexo 文件夹，这个文件夹其实就是利用 Hexo 生成的站点信息了。接下来讲下怎么建站。\nHexo 建站初始化操作使用  hexo init &lt;folder&gt; 指令就可以在指定文件夹下建立站点信息，我一般用域名做名称，如下：\nhexo init java4u.cn\n\n\n\n站点初始化中：\n\n站点初始化完成，会生成指定的文件夹：\n\n目录结构进入该站点，我们看下目录结构，如下：\n\n这些文件有着各自的职责：\n\n_config.landscape.yml：自定义的主题配置文件，此处的 landscape 是默认主题。配置其他主题可以参考这种方式。\n_config.yml：站点全局的配置文件。\nnode_modules：node 模块文件夹。包含可执行文件和依赖的资源。\npackage-lock.json：node_modules 文件中所有模块的版本信息，模块来源。\npackage.json：Hexo 框架的基本参数信息以及它所依赖的插件。\nscaffolds：scaffolds 原意是脚手架，这里可以理解为模板文件夹。当你创建新的文章时，Hexo 会根据该文件夹下的对应文件进行初始化构建。\nsource：资源文件夹。这里是你放自己资源比如博文和图片的地方。 _posts 文件夹下的 Markdown 和 HTML 文件会被解析并放到 public 文件夹下。其他文件或文件夹，如果开头命名不是 _ (下划线)，也都会被拷贝过去。\nthemes：主题文件夹。Hexo 会根据主题来生成静态页面。\n\n基于这样的结构，Hexo 就具备了生成静态网站的能力。\n本地启动我们先本地启动，看下实际效果。输入以下命令：\nhexo server\n\n\n\n\n\nHexo 会启动服务，将默认生成的网站运行在本机的 4000 端口上，可以直接访问 http://localhost:4000 就能看到网站首页，它基于默认主题生成，同时有一篇默认文章。\n\n这个页面只是官方提供的一个样例，看到它就意味着你本地环境跑通了。我们可以通过修改配置的方式，对页面相关元素做调整。\n核心配置以下是我们需要了解或者修改的配置信息。\npackage.json这个文件列出了 Hexo 的基本参数信息以及它所依赖的插件。可以看到，EJS，Stylus 和 Markdown 渲染器都是默认安装的。\n&#123;  &quot;name&quot;: &quot;hexo-site&quot;,  &quot;version&quot;: &quot;0.0.0&quot;,  &quot;private&quot;: true,  &quot;scripts&quot;: &#123;    &quot;build&quot;: &quot;hexo generate&quot;,    &quot;clean&quot;: &quot;hexo clean&quot;,    &quot;deploy&quot;: &quot;hexo deploy&quot;,    &quot;server&quot;: &quot;hexo server&quot;  &#125;,  &quot;hexo&quot;: &#123;    &quot;version&quot;: &quot;&quot;  &#125;,  &quot;dependencies&quot;: &#123;    &quot;hexo&quot;: &quot;^5.0.0&quot;,    &quot;hexo-generator-archive&quot;: &quot;^1.0.0&quot;,    &quot;hexo-generator-category&quot;: &quot;^1.0.0&quot;,    &quot;hexo-generator-index&quot;: &quot;^2.0.0&quot;,    &quot;hexo-generator-tag&quot;: &quot;^1.0.0&quot;,    &quot;hexo-renderer-ejs&quot;: &quot;^1.0.0&quot;,    &quot;hexo-renderer-marked&quot;: &quot;^3.0.0&quot;,    &quot;hexo-renderer-stylus&quot;: &quot;^2.0.0&quot;,    &quot;hexo-server&quot;: &quot;^2.0.0&quot;,    &quot;hexo-theme-landscape&quot;: &quot;^0.0.3&quot;  &#125;&#125;\n\n\n\n\n如果后边要切换主题，记得把最后一个默认的主题依赖删除掉。\n\n_config.yml可设置网站、网址、目录、文章、分类&amp;标签、日期/时间格式、分页和扩展等信息。\n网站\n\n\n\n参数\n描述\n\n\n\ntitle\n网站标题\n\n\nsubtitle\n网站副标题\n\n\ndescription\n网站描述，用于 SEO\n\n\nkeywords\n网站的关键词，支持多个关键词。\n\n\nauthor\n文章作者。\n\n\nlanguage\n网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。\n\n\ntimezone\n网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America/New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia/Shanghai。\n\n\nURL\n\n\n\n参数\n描述\n默认值\n\n\n\nurl\n网址, must starts with http:// or https://\nhttp://example.com\n\n\nroot\n网站根目录，如果放子目录，设置 /blog/ \n/\n\n\npermalink\n文章的 永久链接 格式\n:year/:month/:day/:title/\n\n\npermalink_defaults\n永久链接中各部分的默认值\n\n\n\npretty_urls\n改写 permalink 的值来美化 URL\n\n\n\npretty_urls.trailing_index\n是否在永久链接中保留尾部的 index.html，设置为 false 时去除\ntrue\n\n\npretty_urls.trailing_html\n是否在永久链接中保留尾部的 .html, 设置为 false 时去除 (对尾部的 index.html无效)\ntrue\n\n\n目录\n\n\n\n参数\n描述\n默认值\n\n\n\nsource_dir\n资源文件夹，这个文件夹用来存放内容。\nsource\n\n\npublic_dir\n公共文件夹，这个文件夹用于存放生成的站点文件。\npublic\n\n\ntag_dir\n标签文件夹\ntags\n\n\narchive_dir\n归档文件夹\narchives\n\n\ncategory_dir\n分类文件夹\ncategories\n\n\ncode_dir\nInclude code 文件夹，source_dir 下的子目录\ndownloads/code\n\n\ni18n_dir\n国际化（i18n）文件夹\n:lang\n\n\nskip_render\n跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 public 目录中。\n\n\n\n文章\n\n\n\n参数\n描述\n默认值\n\n\n\nnew_post_name\n新文章的文件名称\n:title.md\n\n\ndefault_layout\n预设布局\npost\n\n\nauto_spacing\n在中文和英文之间加入空格\nfalse\n\n\ntitlecase\n把标题转换为 title case\nfalse\n\n\nexternal_link\n在新标签中打开链接\ntrue\n\n\nexternal_link.enable\n在新标签中打开链接\ntrue\n\n\nexternal_link.field\n对整个网站（site）生效或仅对文章（post）生效\nsite\n\n\nexternal_link.exclude\n需要排除的域名。主域名和子域名如 www 需分别配置\n[]\n\n\nfilename_case\n把文件名称转换为 (1) 小写或 (2) 大写\n0\n\n\nrender_drafts\n显示草稿\nfalse\n\n\npost_asset_folder\n启动 Asset 文件夹\nfalse\n\n\nrelative_link\n把链接改为与根目录的相对地址，建议使用绝对地址。\nfalse\n\n\nfuture\n显示未来的文章\ntrue\n\n\nhighlight\n代码块的设置, see Highlight.js section for usage guide\n\n\n\nprismjs\n代码块的设置, see PrismJS section for usage guide\n\n\n\n分类 &amp; 标签\n\n\n\n参数\n描述\n默认值\n\n\n\ndefault_category\n默认分类\nuncategorized\n\n\ncategory_map\n分类别名\n\n\n\ntag_map\n标签别名\n\n\n\n日期/时间格式\nHexo 使用 Moment.js 来解析和显示时间。\n\n\n\n参数\n描述\n默认值\n\n\n\ndate_format\n日期格式\nYYYY-MM-DD\n\n\ntime_format\n时间格式\nHH:mm:ss\n\n\nupdated_option\n当 Front Matter 中没有指定 updated 时 updated 的取值，支持 mtime(文件最后修改时间)，date(使用 date 的值)，empty(不指定)\nmtime\n\n\n分页\n\n\n\n参数\n描述\n默认值\n\n\n\nper_page\n每页显示的文章量 (0 = 关闭分页功能)\n10\n\n\npagination_dir\n分页目录\npage\n\n\n扩展\n【主题】\n\n\n\n参数\n描述\n默认值\n\n\n\ntheme\n当前主题名称。值为false时禁用主题\nlandscape\n\n\ntheme_config\n主题的配置文件。在这里放置的配置会覆盖主题目录下的 _config.yml 中的配置\n无初始配置\n\n\ndeploy\n部署部分的设置\n\n\n\nmeta_generator\nMeta generator 标签。 值为 false 时 Hexo 不会在头部插入该标签\ntrue\n\n\n【部署】\n配置如下：\ndeploy:  type: git  repo: &lt;repository url&gt; #https:&#x2F;&#x2F;bitbucket.org&#x2F;JohnSmith&#x2F;johnsmith.bitbucket.io  branch: [branch]  message: [message]\n\n\n\n\n\n\n参数\n描述\n默认\n\n\n\nrepo\n库（Repository）地址\n\n\n\nbranch\n分支名称\ngh-pages (GitHub) coding-pages (Coding.net) master (others)\n\n\nmessage\n自定义提交信息\nSite updated: &#123;&#123; now('YYYY-MM-DD HH:mm:ss') &#125;&#125;)\n\n\ntoken\nOptional token value to authenticate with the repo. Prefix with $ to read token from environment variable\n\n\n\n常用指令创建文章使用以下指令：\nhexo new &quot;test&quot;\n\n\n\n或者简写：\nhexo n &quot;test&quot;\n\n\n\n运行服务器输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。\nhexo server\n\n\n\n或者简写：\nhexo s\n\n\n\n生成静态文件hexo generate\n\n\n\n或者简写\nhexo g\n\n\n\n监视文件变动立即重新生成。该操作会阻塞命令。\nhexo g --watch\n\n\n\n生成完毕后自动部署网站。\nhexo generate --deploy\n\n\n\n部署Hexo 提供了快速方便的一键部署功能，让你只需一条命令就能将网站部署到服务器上。\nhexo deploy\n\n\n\n或者简写为：\nhexo d\n\nHexo 主题为什么选择 KazeHexo 默认主题为 landscape，但我觉得不够美观，这里推荐 kaze ,它有以下特性：\n\n响应式设计，适配桌面端、平板、手机等各种设备\n\n前端性能优化，加载快速，眨眼之间即可加载完成\n\n图片懒加载，应用懒加载技术加快页面的生成速度\n资源压缩，提升本地资源请求速度\n精简设计，不包含 Jquery 等额外库\n\n\n支持侧边栏小组件，例如最近文章，作者卡片\n\n暗黑模式，享受黑夜的魅力\n\n代码高亮，支持 prismjs\n\n公式渲染，支持 katex 和 mathjax\n\n评论系统，集成 valine、gitalk 和 livere\n\n访问量统计和谷歌分析支持\n\n\n安装 Kaze在 your site/themes 下输入\ncd themesgit clone https:&#x2F;&#x2F;github.com&#x2F;theme-kaze&#x2F;hexo-theme-Kaze.git\n\n\n\n安装成功后，会生出目录：hexo-theme-Kaze。\n修改站点配置文件 _config.yml 下的主题值为：hexo-theme-Kaze。\n\n用 hexo server 启动 Hexo 服务看下效果。\n\n会看到已经生成了默认的主题，只是很多东西都没有，需要改造一下。\n主题配置可在该主题目录下的 _config.yml 文件里配置。\n主题颜色在 color 中进行配置，以下是默认值。\ncolor:  text-color: &quot;#3c4858&quot;  text-strong-color: &quot;#2f3d4e&quot;  text-light-color: &quot;#909faf&quot;  divider-color: &quot;#e6e8ee&quot;  title-color: &quot;#475b6d&quot;  link-color: &quot;#3273dc&quot;  link-hover-color: &quot;#6596e5&quot;  info-text-color: &quot;#909faf&quot;  widget-background-color: &quot;#fff&quot;  body-background-color: &quot;#f2f5f8&quot;  border-color: &quot;#e1e4e9&quot;  pre-color: &quot;#2d2d2d&quot;  code-color: &quot;#50687c&quot;  code-background-color: &quot;#e9eaf0&quot;\n\n\n\n\n\n字号与字体在 font 中进行配置，以下是默认值。\nfont:  font-size: 16px # global font-size  font-family: &#39;-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,sans-serif&#39; # global font-family\n\n站点访问量统计访问量统计目前仅支持不蒜子，默认关闭，可统计站点总访问量和总访客数。\nfooter:  #------------------------  # pv &#x2F; uv statistics config  #------------------------  statistics:    enable: false    type: busuanzi # now version only supports busuanzi    pv:      enable: true      style: 本站总访问量&#123;&#125;次 # the style will be shown as $1&#123;pv&#125;$2    uv:      enable: true      style: 本站总访客数&#123;&#125;次 # the style will be shown as $1&#123;uv&#125;$2\n\n\n\n数据分析analytics:  enable: false  type: google # google  google:    id:\n\nenable 开启分析支持（默认关闭）\ntype&#96; 目前仅支持 &#96;google\n\ngoogle.id 有关谷歌分析的具体使用说明和 id 使用可以参考谷歌文档\n首页文章头图在文章 Front-matter 中 banner_img 可以设置首页头图\n小组件widgets:  showWidgetsMobiles: &quot;none&quot;\n\nshowWidgetsMobiles : 在窄屏幕上是否显示小组件，none 关闭（默认），flex 开启\n关于关于页面需要自行创建，在站点 source 中新建 about 文件夹并在文件夹内创建 index.md，该文件至少需要包含\n# at $&#123;yoursite&#125;&#x2F;about&#x2F;index.md---title: 关于layout: about---\n\n社交链接在 about 下的 social_links中进行配置，主题图标依赖于 iconfont，内置了一部分社交图标，你可以自定义其他icon文件或者解决方案来添加自定义图标。\nabout:  description: description  social_links:    - &#123; icon: icon-github, link:  https:&#x2F;&#x2F;xxx&#125;    # - &#123; icon: icon, link: your link &#125;\n\n\n友链友链格式按如下填写即可生成友链页面\nlinks:  example-name-1:     url: https:&#x2F;&#x2F;example.com    avatar: https:&#x2F;&#x2F;example.com&#x2F;avatar.jpg  example-name-2:     url: https:&#x2F;&#x2F;example.com    avatar: https:&#x2F;&#x2F;example.com&#x2F;avatar.jpg\n\n文章页搜索功能search:  enable: true  path: search.json  field: posts  searchContent: true\n\n\nenable 开启搜索功能（默认开启）\npath 文件名称（暂无用处）\nfield 需要搜索的范围，支持 posts | pages | all\nsearchContent 搜索文件是否包含正文内容（不建议开启，包含所有文章内容这样会使得搜索文件异常巨大）替代方案是搜索分类标签或使用algolia等第三方搜索服务（Todo）\n\n目录主题目录通过Hexo原生函数生成，具体可参见 文档\ntoc:  showListNumber: false  maxDepth: 6  minDepth: 1\n\nshowListNumber 是否生成编号\nmaxDepth TOC最大深度\nminDepth TOC最小深度\n代码高亮参见代码 高亮文档\n数学公式主题支持 mathjax 和 katex 两种渲染引擎，具体参见 相关文档\ncopyrightcopyright:  enable: true  writer: # if writer is empty we will use config.author as writer  declare: 本博客所有文章除特别声明外，均采用&lt;a target&#x3D;&quot;_blank&quot; rel&#x3D;&quot;noopener&quot; href&#x3D;&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;deed.zh&quot;&gt;CC BY-NC-SA 4.0 协议&lt;&#x2F;a&gt;。转载请注明出处！  style: warning\n\nenable 开起版权说明（默认开启）\nwriter&#96; 作者id，如果不填则会使用主题配置&#96;author&#96;或站点配置&#96;author\n\ndeclare 版权声明具体内容，支持 html 语句\nstyle 声明内容样式，与 note 样式相同\n版权内容有三部分：作者、文章链接、版权声明\n作者使用 writer 参数，文章链接基于站点配置文件中url参数生成，版权声明使用 declare 参数\nFront-matterbanner_img设置文章与首页头图\nbanner_img_set在图片加载时预先加载的图片，可以设置为 loading 图或缩略图等\nexcerpt为文章设置在首页显示的简介，还可以通过 &lt;!--more--&gt; 来控制显示\n评论支持 valine，gitalk 和 livere\n具体设置可参考主题配置文档说明和相关评论插件文档\n字数统计主题集成 hexo-wordcount 插件，在主题配置文件中设置\nwordcount:  enable: true\n\n开启（默认开启）\n图片画廊图片画廊功能基于 fslightbox，在主题配置文件中设置\nfslightbox:  enable: true\n\n开启（默认开启）\n标签插件主题集成了一些标签方便书写\nnote在 markdown 文件中如下书写即可\n&#123;% note style %&#125;...markdown content&#123;% endnote %&#125;\n\n有五种样式可以选择，primary，success，info，warning，danger\n\n备案信息您可以在主题配置文件内增加您的备案信息。\nfooter:  #------------------------  # 备案配置  # 请将公安备案的缩略图置于 $&#123;yoursite&#125;&#x2F;img&#x2F;beian.png  RecordInfo: &quot;&quot; # &#39;某ICP备xxx号&#39;  govRecordInfo: &quot;&quot; # &#39;某公网安备xxx号&#39;  govRecordUrl: &quot;&quot; # 公网安备案信息地址  #------------------------\n\n\n\n站点托管为什么选择 Gitee PagesGitHub 和 Gitee 都提供免费的静态网页托管服务。我们可以使用 GitHub Pages 或 Gitee Pages 托管博客、项目官网等静态网页，这样就省去了购买服务器的钱，也不需要耗费太多精力维护。\nGitHub Pages 使用很广泛，我之前也用过，不过访问不够稳定，会影响页面加载速度。Gitee 是国内版的 GitHub，访问速度优秀，并且国内发展势头不错，因此我选取 Gitee Pages 来托管我的网站。\n建立仓库申请一个 Gitee 账号，创建一个新的仓库，仓库名尽量和账号名一致，这样可以避免一些因为路径引发的问题。\n\n然后在仓库首页服务一栏开启 Gitee Pages 服务。\n\n开启后，你就拥有了专属的二级域名网址。\n注意：仓库内容有变化，需要手动触发更新，页面才能真正生效。\n连接仓库\n安装 hexo-deployer-git。\n\nnpm install hexo-deployer-git --save\n\n\n\n\n\n修改配置。\n\ndeploy:  type: git  repo: git@gitee.com:java4u&#x2F;java4u.git\n\n注意上面的 repo 地址并不是仓库的地址，而是你下载/克隆项目时弹出的那个地址，type 如果是 git 就选择 SSH。\n\n\n生成/添加 SSH 公钥\n\nGitee 、GitHub 提供了基于 SSH 协议的 Git 服务，在使用 SSH 协议访问仓库仓库之前，需要先配置好账户/仓库的 SSH 公钥。\n先看下自己有没有配置过用户名和邮箱：\ngit config --global user.name git config --global user.email\n\n\n如果没有就做下配置：\n# 设置邮箱git config --global user.email *********@qq.com # 设置用户名git config --global user.name &#39;****&#39;\n\n然后本地生成 SSH 公钥，邮箱为刚配置好的账户：\nssh-keygen -t rsa -C yong__1994@163.com\n\n生成后可查看 SSH 公钥：\ncat ~&#x2F;.ssh&#x2F;id_rsa.pub\n\n复制公钥去 Gitee 粘贴，添加。\n\n测试是否连接成功：\nssh -T git@gitee.com\n\n\n上传仓库执行部署命令，即可将本地资源上传远程仓库。\nhexo d\n\n\n\n手动更新远程仓库虽然可以看到提交记录，但静态网站不会感知到实时变更，需要去 Gitee Pages 服务页面做下更新。\n\n稍等片刻，访问 https://java4u.gitee.io/ 即可看到 Hexo 结合 kaze 主题搭建的静态网站。\n\n\n\n","categories":["教程"],"tags":["实用工具","教程","建站"]}]